<?xml version="1.0" encoding="utf-8"?>
<WordDefinition xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://services.aonaware.com/webservices/">
  <Word>gotcha</Word>
  <Definitions>
    <Definition>
      <Word>gotcha</Word>
      <Dictionary>
        <Id>foldoc</Id>
        <Name>The Free On-line Dictionary of Computing (27 SEP 03)</Name>
      </Dictionary>
      <WordDefinition>gotcha
     
        &lt;jargon, programming&gt; A {misfeature} of a system, especially a
        programming language or environment, that tends to breed
        {bug}s or mistakes because it both enticingly easy to invoke
        and completely unexpected and/or unreasonable in its outcome.
     
        For example, a classic gotcha in {C} is the fact that
     
        	if (a=b) {code;}
     
        is syntactically valid and sometimes even correct.  It puts
        the value of "b" into "a" and then executes "code" if "a" is
        non-zero.  What the programmer probably meant was
     
        	if (a==b) {code;}
     
        which executes "code" if "a" and "b" are equal.
     
        [{Jargon File}]
     
        (1995-04-17)
     
     
</WordDefinition>
    </Definition>
    <Definition>
      <Word>gotcha</Word>
      <Dictionary>
        <Id>jargon</Id>
        <Name>Jargon File (4.3.1, 29 Jun 2001)</Name>
      </Dictionary>
      <WordDefinition>gotcha n. A {misfeature} of a system, especially a programming language
   or environment, that tends to breed bugs or mistakes because it is both
   enticingly easy to invoke and completely unexpected and/or unreasonable
   in its outcome. For example, a classic gotcha in {C} is the fact that
   `if (a=b) {code;}' is syntactically valid and sometimes even correct. It
   puts the value of `b' into `a' and then executes `code' if `a' is
   non-zero. What the programmer probably meant was `if (a==b) {code;}',
   which executes `code' if `a' and `b' are equal.


</WordDefinition>
    </Definition>
  </Definitions>
</WordDefinition>
