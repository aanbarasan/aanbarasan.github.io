<?xml version="1.0" encoding="utf-8"?>
<WordDefinition xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://services.aonaware.com/webservices/">
  <Word>firmware</Word>
  <Definitions>
    <Definition>
      <Word>firmware</Word>
      <Dictionary>
        <Id>foldoc</Id>
        <Name>The Free On-line Dictionary of Computing (27 SEP 03)</Name>
      </Dictionary>
      <WordDefinition>Firmware
     
        Software stored in read-only memory (ROM) or programmable ROM
        (PROM).  Easier to change than hardware but harder than
        software stored on disk.  Firmware is often responsible for
        the behaviour of a system when it is first switched on.  A
        typical example would be a "monitor" program in a
        microcomputer which loads the full operating system from disk
        or from a network and then passes control to it.
     
     
</WordDefinition>
    </Definition>
    <Definition>
      <Word>firmware</Word>
      <Dictionary>
        <Id>jargon</Id>
        <Name>Jargon File (4.3.1, 29 Jun 2001)</Name>
      </Dictionary>
      <WordDefinition>firmware /ferm'weir/ n. Embedded software contained in EPROM or flash
   memory. It isn't quite hardware, but at least doesn't have to be loaded
   from a disk like regular software. Hacker usage differs from straight
   techspeak in that hackers don't normally apply it to stuff that you
   can't possibly get at, such as the program that runs a pocket
   calculator. Instead, it implies that the firmware could be changed, even
   if doing so would mean opening a box and plugging in a new chip. A
   computer's BIOS is the classic example, although nowadays there is
   firmware in disk controllers, modems, video cards and even CD-ROM
   drives.


</WordDefinition>
    </Definition>
    <Definition>
      <Word>firmware</Word>
      <Dictionary>
        <Id>wn</Id>
        <Name>WordNet (r) 2.0</Name>
      </Dictionary>
      <WordDefinition>firmware
     n : (computer science) coded instructions that are stored
         permanently in read-only memory [syn: {microcode}]
</WordDefinition>
    </Definition>
  </Definitions>
</WordDefinition>
